{
  "aboutScreenTitle": "About This App",
  "aboutReadmeText": "> ## How to use\n>\n> - Drag downwards to refresh data.\n>\n> - Drag upwards from bottom third of the screen to reveal weather details.\n\n## Acknowledgement\n\n[Data.gov.sg](https://data.gov.sg/) datasets licensed under [Singapore Open Data License](https://data.gov.sg/open-data-licence). Access via API is subject to [API Terms of Service](https://data.gov.sg/privacy-and-website-terms#api-terms).\n\n[Weather Icons](https://erikflowers.github.io/weather-icons/) licensed under [SIL OFL 1.1](http://scripts.sil.org/OFL).\n\n[Unsplash](https://unsplash.com) photos licensed under [Unsplash License](https://unsplash.com/license) from contributors: [Christina Victoria Craft](https://unsplash.com/s/photos/wind?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText), [David Moum](https://unsplash.com/@davidmoum?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText), [Eric Muhr](https://unsplash.com/@ericmuhr?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText), [Fabio Neo Amato](https://unsplash.com/@cloudsdealer?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText), [Guillaume M.](https://unsplash.com/@guimgn?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText), [Jason Briscoe](https://unsplash.com/@jsnbrsc?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText), [Peyman Farmani](https://unsplash.com/@peymanfarmani?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText).\n\nDeveloped using [Flutter](https://flutter.dev) including third-party libraries: [build_runner](https://pub.dev/packages/build_runner), [expandable_bottom_sheet](https://pub.dev/packages/expandable_bottom_sheet), [flutter_markdown](https://pub.dev/packages/flutter_markdown), [http](https://pub.dev/packages/http), [intl](https://pub.dev/packages/intl), [json_annotation](https://pub.dev/packages/json_annotation), [json_serializatble](https://pub.dev/packages/json_serializable), [location](https://pub.dev/packages/location), [mockito](https://pub.dev/packages/mockito), [package_info](https://pub.dev/packages/package_info), [provider](https://pub.dev/packages/provider), [url_launcher](https://pub.dev/packages/url_launcher), [weather_icons](https://pub.dev/packages/weather_icons).\n\n## Privacy policy\n\nThis app itself *does not* collect or store any private data.\n\nThe app uses [Data.gov.sg](https://data.gov.sg/) (see relevant [Privacy Statement](https://data.gov.sg/privacy-and-website-terms#privacy)).\n\n## License\n\nSource code is available on [GitHub](https://github.com/hum-ler/singapore_weather) under [The MIT License](https://opensource.org/licenses/MIT).",
  "appTitle": "Singapore Weather",
  "forecastTypeLabel": "{type, select, predawn{Predawn} morning{Morning} afternoon{Afternoon} night{Night} other{Other}}",
  "@forecastTypeLabel": {
    "placeholders": {
      "type": {
        "type": "String"
      }
    }
  },
  "geolocationExceptionPermissionDenied": "permission denied",
  "geolocationExceptionServiceDisabled": "service disabled",
  "geolocationExceptionTimeout": "timeout",
  "geolocationExceptionToString": "Geolocation service error: {message}",
  "@geolocationExceptionToString": {
    "placeholders": {
      "message": {
        "type": "String"
      }
    }
  },
  "geolocationExceptionUnexpectedResponse": "unexpected response from service",
  "regionNameLabel": "{name, select, central{Central} north{North} east{East} south {South} west{West} other{Other}}",
  "@regionNameLabel": {
    "placeholders": {
      "name": {
        "type": "String"
      }
    }
  },
  "snackBarGeolocationExceptionPrefix": "Cannot get user location — ",
  "snackBarRetryButtonLabel": "RETRY",
  "snackBarWeatherExceptionPrefix": "Cannot get weather data — ",
  "weatherExceptionToString": "Weather service error: {message}",
  "@weatherExceptionToString": {
    "placeholders": {
      "message": {
        "type": "String"
      }
    }
  },
  "weatherExceptionUnexpectedCondition": "unexpected weather condition data",
  "weatherExceptionUnexpectedForecast": "unexpected weather forecast data",
  "weatherExceptionUnexpectedReading": "unexpected {type} data",
  "@weatherExceptionUnexpectedReading": {
    "placeholders": {
      "type": {
        "type": "String"
      }
    }
  }
}
